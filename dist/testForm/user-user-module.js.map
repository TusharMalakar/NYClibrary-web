{"version":3,"sources":["webpack:///./src/app/user/edit-classes/edit-classes.component.css","webpack:///./src/app/user/edit-classes/edit-classes.component.html","webpack:///./src/app/user/edit-classes/edit-classes.component.ts","webpack:///./src/app/user/edit-picture/edit-picture.component.css","webpack:///./src/app/user/edit-picture/edit-picture.component.html","webpack:///./src/app/user/edit-picture/edit-picture.component.ts","webpack:///./src/app/user/edit-skills/edit-skills.component.css","webpack:///./src/app/user/edit-skills/edit-skills.component.html","webpack:///./src/app/user/edit-skills/edit-skills.component.ts","webpack:///./src/app/user/edit-user-form/edit-user-form.component.css","webpack:///./src/app/user/edit-user-form/edit-user-form.component.html","webpack:///./src/app/user/edit-user-form/edit-user-form.component.ts","webpack:///./src/app/user/user-page/user-page.component.css","webpack:///./src/app/user/user-page/user-page.component.html","webpack:///./src/app/user/user-page/user-page.component.ts","webpack:///./src/app/user/user-routing.module.ts","webpack:///./src/app/user/user.module.ts"],"names":[],"mappings":"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","file":"user-user-module.js","sourcesContent":["module.exports = \".example-chip-list {\\n    width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci9lZGl0LWNsYXNzZXMvZWRpdC1jbGFzc2VzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0FBQ2YiLCJmaWxlIjoic3JjL2FwcC91c2VyL2VkaXQtY2xhc3Nlcy9lZGl0LWNsYXNzZXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNoaXAtbGlzdCB7XG4gICAgd2lkdGg6IDEwMCU7XG59Il19 */\"","module.exports = \"<h2 mat-dialog-title> Update User Details </h2>\\n<mat-form-field class=\\\"example-chip-list\\\">\\n        <mat-chip-list #chipListClasses>\\n                <mat-chip\\n                *ngFor = \\\"let class of classes\\\"\\n                [selectable] = \\\"selectable\\\"\\n                [removable] = \\\"removable\\\"\\n                (removed) = \\\"removeClass(class)\\\">\\n                {{ class }}\\n                <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\n                </mat-chip>\\n                <input \\n                placeholder=\\\"New Class...\\\"\\n                #classInput\\n                [formControl]=\\\"classCtrl\\\"\\n                [matAutocomplete]=\\\"auto2\\\"\\n                [matChipInputFor]=\\\"chipListClasses\\\"\\n                [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\n                [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\n                (matChipInputTokenEnd)=\\\"addClass($event)\\\">\\n                <mat-autocomplete #auto2=\\\"matAutocomplete\\\" (optionSelected)=\\\"selectedClass($event)\\\">\\n                        <mat-option *ngFor=\\\"let class of filteredClasses\\\" [value]=\\\"class\\\">\\n                        {{ class }}\\n                        </mat-option>\\n                </mat-autocomplete>\\n        </mat-chip-list>\\n</mat-form-field>\\n<br>\\n        <button mat-raised-button (click) = \\\"update()\\\">Update</button>\\n<br>\\n\\n\"","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MatAutocomplete, MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { FormControl } from '@angular/forms';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, OnInit, ElementRef, ViewChild, Inject } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { UserService } from 'src/app/shared/dbAccess/user.service';\nimport { startWith, debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-edit-classes',\n  templateUrl: './edit-classes.component.html',\n  styleUrls: ['./edit-classes.component.css']\n})\nexport class EditClassesComponent implements OnInit {\n\n  visible = true;\n  selectable = true;\n  removable = true;\n  addOnBlur = true;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n\n  //Variables for Classes.\n  classCtrl = new FormControl();\n  filteredClasses: Observable<string[]>;\n  classes: string[] = [];\n  allClasses: string[] = [];\n\n  @ViewChild('classInput') classInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto2') matAutocomplete2: MatAutocomplete;\n\n  constructor(\n    private userService : UserService,\n    //Handles the openning/closing of the Dialog\n    public dialogRef: MatDialogRef<EditClassesComponent>,\n    //Handles passing of data from/to component opening the dialog\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n    this.classes = this.data.userData['classes'];\n    this.classCtrl.valueChanges.pipe(\n      startWith(null),\n      debounceTime(200),\n      distinctUntilChanged(),\n      switchMap( (query: string) => this.userService.searchClasses(query)  )\n      ).subscribe( (classes: Observable<string[]>) => this.filteredClasses = classes[\"matches\"] );\n  }\n\n\n  addClass(event: MatChipInputEvent): void {\n\n    if(!this.matAutocomplete2.isOpen){\n\n      const input = event.input;\n      const value = event.value;\n\n      if((value || '').trim()) {\n        this.classes.push(value.trim());\n      }\n  \n      if(input) {\n        input.value = '';\n      } \n\n      this.classCtrl.setValue(null);\n    }\n  }\n\n  removeClass(_class: string): void {\n    const index = this.classes.indexOf(_class);\n\n    if (index >= 0) {\n      this.classes.splice(index, 1);\n    }\n  }\n\n  selectedClass(event: MatAutocompleteSelectedEvent): void {\n    this.classes.push(event.option.viewValue);\n    this.classInput.nativeElement.value = '';\n    this.classCtrl.setValue(null);\n  }\n\n  update(){\n    this.userService.updateUserclass(this.classes).subscribe(result => { console.log(result) });\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \".hide_file {\\n    position: absolute;\\n    z-index: 1000;\\n    opacity: 0;\\n    cursor: pointer;\\n    right: 0;\\n    top: 0;\\n    height: 100%;\\n    font-size: 24px;\\n    width: 100%;\\n}\\n\\n.mat-button {\\n    border: 1px solid royalblue;\\n}\\n\\n.uploadPic{\\n    position:relative;\\n    text-align:center;\\n    float:left;\\n    cursor:pointer;\\n    margin-left: 10%;\\n  }\\n\\n  \\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci9lZGl0LXBpY3R1cmUvZWRpdC1waWN0dXJlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLFVBQVU7SUFDVixlQUFlO0lBQ2YsUUFBUTtJQUNSLE1BQU07SUFDTixZQUFZO0lBQ1osZUFBZTtJQUNmLFdBQVc7QUFDZjs7QUFFQTtJQUNJLDJCQUEyQjtBQUMvQjs7QUFHQTtJQUNJLGlCQUFpQjtJQUNqQixpQkFBaUI7SUFDakIsVUFBVTtJQUNWLGNBQWM7SUFDZCxnQkFBZ0I7RUFDbEIiLCJmaWxlIjoic3JjL2FwcC91c2VyL2VkaXQtcGljdHVyZS9lZGl0LXBpY3R1cmUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oaWRlX2ZpbGUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB6LWluZGV4OiAxMDAwO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogMDtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4ubWF0LWJ1dHRvbiB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgcm95YWxibHVlO1xufVxuXG5cbi51cGxvYWRQaWN7XG4gICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gICAgZmxvYXQ6bGVmdDtcbiAgICBjdXJzb3I6cG9pbnRlcjtcbiAgICBtYXJnaW4tbGVmdDogMTAlO1xuICB9XG5cbiAgXG4gICJdfQ== */\"","module.exports = \" <!--Taking picture as input-->\\n <div class = \\\"container\\\">\\n    <div class=\\\"uploadPic\\\">\\n        <input  type=\\\"file\\\" class=\\\"hide_file\\\" (change)=\\\"handleFileInput($event.target.files)\\\">\\n        <button mat-flat-button color=\\\"primary\\\" >Upload File</button> \\n    </div>\\n    <button class=\\\"uploadButton\\\" mat-button color=\\\"primary\\\" (click)=\\\"uploadFileToActivity()\\\">submit</button>\\n</div>\\n\"","import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { EditClassesComponent } from './../edit-classes/edit-classes.component';\nimport { UserService } from './../../shared/dbAccess/user.service';\nimport { Component, OnInit, Inject } from '@angular/core';\n\n@Component({\n  selector: 'app-edit-picture',\n  templateUrl: './edit-picture.component.html',\n  styleUrls: ['./edit-picture.component.css']\n})\nexport class EditPictureComponent implements OnInit {\n\n  //default variable for selected file.\n  fileToUpload: File = null;\n  submitPressed = false;\n\n  constructor(\n    private userService: UserService,\n    public dialogRef: MatDialogRef<EditClassesComponent>,\n    //Handles passing of data from/to component opening the dialog\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n  }\n\n   //function which you use in (change)-event of your file input tag:\n handleFileInput(files: FileList) {\n  this.fileToUpload = files.item(0);\n}\n\n  async uploadFileToActivity() {\nawait this.userService.uploadProfilePicture(this.fileToUpload).subscribe((data: any)=>{\n  console.log(data)\n})\n//   this.fileUploadService.postFile(this.fileToUpload).subscribe(data => {\n//     // do something, if upload success\n//     }, error => {\n//       console.log(error);\n//     });\nthis.submitPressed = true;\nthis.dialogRef.close(this.submitPressed);\n\n}\n\n}\n","module.exports = \".example-chip-list {\\n    width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci9lZGl0LXNraWxscy9lZGl0LXNraWxscy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztBQUNmIiwiZmlsZSI6InNyYy9hcHAvdXNlci9lZGl0LXNraWxscy9lZGl0LXNraWxscy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY2hpcC1saXN0IHtcbiAgICB3aWR0aDogMTAwJTtcbn0iXX0= */\"","module.exports = \"<h2 mat-dialog-title> Update User Details </h2>\\n<mat-form-field class=\\\"example-chip-list\\\">\\n    <mat-chip-list #chipListSkills>\\n            <mat-chip\\n            *ngFor=\\\"let skill of skills\\\"\\n            [selectable]=\\\"selectable\\\"\\n            [removable]=\\\"removable\\\"\\n            (removed)=\\\"removeSkill(skill)\\\">\\n            {{ skill }}\\n            <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\n            </mat-chip>\\n            <input\\n            placeholder=\\\"New Skill...\\\"\\n            #skillInput\\n            [formControl]=\\\"skillCtrl\\\"\\n            [matAutocomplete]=\\\"auto\\\"\\n            [matChipInputFor]=\\\"chipListSkills\\\"\\n            [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\n            [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\n            (matChipInputTokenEnd)=\\\"addSkill($event)\\\">\\n            <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selectedSkill($event)\\\">\\n                    <mat-option *ngFor=\\\"let skill of filteredSkills\\\" [value]=\\\"skill\\\">\\n                    {{ skill }}\\n                    </mat-option>\\n            </mat-autocomplete>\\n    </mat-chip-list>             \\n</mat-form-field>\\n<br>\\n  <button mat-raised-button (click) = \\\"update()\\\">Update</button>\\n<br>\\n\"","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CollabsService } from './../../shared/dbAccess/collabs.service';\nimport { MatAutocomplete, MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { FormControl } from '@angular/forms';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, OnInit, ElementRef, ViewChild, Inject } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { UserService } from 'src/app/shared/dbAccess/user.service';\nimport { startWith, debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { MatChipInputEvent } from '@angular/material/chips';\n\n@Component({\n  selector: 'app-edit-skills',\n  templateUrl: './edit-skills.component.html',\n  styleUrls: ['./edit-skills.component.css']\n})\nexport class EditSkillsComponent implements OnInit {\n\n  visible = true;\n  selectable = true;\n  removable = true;\n  addOnBlur = true;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n\n  //Variables for Skills.\n  skillCtrl = new FormControl();\n  filteredSkills: Observable<string[]>;\n  skills: string[] = [];\n  allSkills: string[] = [];\n\n  @ViewChild('skillInput') skillInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto') matAutocomplete1: MatAutocomplete;\n\n  constructor(\n    private userService : UserService, \n    private collabService: CollabsService,\n    public dialogRef: MatDialogRef<EditSkillsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit() {\n    this.skills = this.data.userData['skills'];\n    this.skillCtrl.valueChanges.pipe(\n      \n      startWith(null),\n      debounceTime(200),\n      distinctUntilChanged(),\n      switchMap( (query: string) => this.userService.searchSkills(query)  )\n      ).subscribe( (skills: Observable<string[]>) => this.filteredSkills = skills[\"matches\"] );\n  }\n\n  addSkill(event: MatChipInputEvent): void {\n\n    if(!this.matAutocomplete1.isOpen){\n\n      const input = event.input;\n      const value = event.value;\n\n      if((value || '').trim()) {\n        this.skills.push(value.trim());\n      }\n  \n      if(input) {\n        input.value = '';\n      } \n\n      this.skillCtrl.setValue(null);\n      \n    }\n  }\n\n  removeSkill(skill: string): void {\n    const index = this.skills.indexOf(skill);\n\n    if (index >= 0) {\n      this.skills.splice(index, 1);\n    }\n  }\n\n  selectedSkill(event: MatAutocompleteSelectedEvent): void {\n    this.skills.push(event.option.viewValue);\n    this.skillInput.nativeElement.value = '';\n    this.skillCtrl.setValue(null);\n\n  }\n\n  update(){\n    this.userService.updateUserSkills(this.skills).subscribe(result => { console.log(result) });\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \".mat-form-field {\\n    width: 95%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci9lZGl0LXVzZXItZm9ybS9lZGl0LXVzZXItZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvdXNlci9lZGl0LXVzZXItZm9ybS9lZGl0LXVzZXItZm9ybS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1mb3JtLWZpZWxkIHtcbiAgICB3aWR0aDogOTUlO1xufSJdfQ== */\"","module.exports = \"<h2 mat-dialog-title> Update User Details </h2>\\n    <div class = \\\"container\\\">\\n        <!-- Template Driven Form: Angular uses these fields and apply a form-level directive to the form, craeting\\n                                    a FormGroup and linking it to the form.\\n                [(ngModel)] two-way(bi-directional) binding to allow for sync of form fields and view model\\n                controller: data, which was passed down from user-page component, of type UserModel will control the fields\\n        -->\\n        <form #form = \\\"ngForm\\\" (ngSubmit) = \\\"update(form.value)\\\">\\n        \\n            <mat-form-field>\\n                <input [(ngModel)] = \\\"data.userData['name']\\\" name = \\\"username\\\" id = \\\"username\\\" type = \\\"text\\\" class = \\\"form-control\\\"\\n                    #username = \\\"ngModel\\\" matInput placeholder = \\\"User Name...\\\" required>\\n            </mat-form-field>\\n            <br>\\n            <mat-form-field>\\n                <input [(ngModel)] = \\\"data.userData['github']\\\" name = \\\"github\\\" id = \\\"github\\\" type = \\\"text\\\" class = \\\"form-control\\\"\\n                    #github = \\\"ngModel\\\" matInput placeholder = \\\"Github...\\\" required>\\n            </mat-form-field>\\n            <br>\\n            <mat-form-field>\\n                <input [(ngModel)] = \\\"data.userData['linkedin']\\\" name = \\\"linkedin\\\" id = \\\"linkedin\\\" type = \\\"text\\\" class = \\\"form-control\\\"\\n                    #linkedin = \\\"ngModel\\\" matInput placeholder = \\\"LinkedIn...\\\" required>\\n            </mat-form-field>\\n            <br>\\n            <button mat-raised-button>Update</button>\\n            <br>\\n        </form>\\n      </div>\\n      \\n\"","import { UserService } from 'src/app/shared/dbAccess/user.service';\nimport { UserModel } from 'src/app/shared/models/user.model';\nimport { CollabModel } from './../../shared/models/collab.model';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Component, OnInit, Input, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-edit-user-form',\n  templateUrl: './edit-user-form.component.html',\n  styleUrls: ['./edit-user-form.component.css']\n})\nexport class EditUserFormComponent implements OnInit {\n  //Model for user data\n  userData: UserModel;\n\n  //Model for collaboration data\n  collabData: CollabModel;\n\n  /**\n  * @author Edwin Quintuna\n  * \n  *\t@brief Constructor that will create an instance of EditUserFormComponent \n  *        and allow us to inject our dependencies; services that will be needed in the component\n  *\n  *\t@param[userService]  ,  service that will handle both retrival and updating user data via http requests\n  *\t@param[dialogRef]    ,  handles the openning/closing of the Dialog\n  *\t@param[data]         ,  handles passing of data from/to component opening the dialog\n  *\t@return nothing\n  */\n  constructor(\n    private userService: UserService,\n    private _formBuilder: FormBuilder,\n    //Handles the openning/closing of the Dialog\n    public dialogRef: MatDialogRef<EditUserFormComponent>,\n    //Handles passing of data from/to component opening the dialog\n    @Inject(MAT_DIALOG_DATA) public data: any){\n\n    }\n  \n  \n  ngOnInit() {}\n\n  /**\n  * @author Edwin Quintuna\n  * \n  *\t@brief Function that will call the UserService to update user details, once thats done return to UserPageComponent\n  *\n  *\t@param[userData]  ,  UserModel that will hold the fields that will be updated on the database\n  *\t@return nothing\n  */\n  update(userData){\n    //User userService to make an http request to update the fields specified on the Template Driven Form\n    this.userService.updateUserProfile(userData).subscribe(result => { console.log(result) });\n    //Will close the dialog and go back to the UserPageComponent\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \".usercard1 {\\n  margin-top: 30px;\\n  padding: 0px;\\n  border-radius: 5px;\\n  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n}\\n\\n.mat-card-avatar {\\n  background-image: url('/assets/userPhoto.png');\\n  background-size: cover;\\n\\n}\\n\\n.mat-card-actions {\\n  display: flex;\\n}\\n\\n.list-header-title {\\ncolor: rgba(0, 0, 0, .54);\\nbackground: rgba(0, 0, 0, 0.062);\\nfont-weight: bold;\\npadding: 0px;\\n\\n}\\n\\n.mat-card-header {\\n  padding-left: 10px;\\n  padding-top: 10px; \\n}\\n\\n.mat-raised-button {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.usercard2 {\\nmargin-top: 30px;\\ncolor: rgba(0, 0, 0, .54);\\nbackground: rgba(0, 0, 0, 0.062);\\nheight: 86.5%;\\npadding-bottom: 25px;\\nborder-radius: 5px;\\nbox-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n}\\n\\n.viewport {\\nwidth: 100%;\\nheight: 100%;\\nmargin-left: 40px;\\nbox-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n}\\n\\n.cdk-virtual-scroll-viewport {\\nheight: 70%;\\nmargin: 0px;\\nbackground-color: white;\\n\\n}\\n\\n.example-form .mat-form-field {\\nmargin: 0px;\\n}\\n\\n.mat-list {\\nwidth: 100%;\\nheight: 100%;\\n}\\n\\n.grid-container {\\ngrid: auto-flow / 1fr;\\nwidth: 100%;\\nheight: 100%;\\n}\\n\\n.grid-search {\\ngrid-area: grid-search;\\nmargin-left: 25px;\\n\\n}\\n\\n.grid-item {\\ngrid-area: grid-item;\\nheight: 100%;\\nmargin-left: 25px;\\nmargin-right: 25px;\\nmargin-bottom: 0px;\\n}\\n\\n.mat-chip-list {\\nmargin: 1px;\\n}\\n\\n.example-form {\\nmin-width: 150px;\\nmax-width: 500px;\\nwidth: 100%;\\n}\\n\\n.example-full-width {\\nwidth: 80%;\\nmargin-top: 15px;\\nmargin-bottom: 15px;\\nbackground: rgba(255, 255, 255, 0.671);\\nborder-radius: 15px;\\n}\\n\\n.wrapper {\\ndisplay:inline-block;\\nmargin-top: 10px;\\nmargin-bottom: 15px;\\nheight: 30px;\\n}\\n\\ninput {\\n    background-color: white;\\n    border: 3;\\n    width: 200px;\\n    height: 30px;\\n}\\n\\nbutton {\\n    \\n    border: solid black 1px;\\n    width: 100px;\\n    height: 38px;\\n}\\n\\n.mat-flat-button  {\\n  width: auto;\\n  margin-left: auto;\\n  margin-right: 10px; \\n}\\n\\n.uploadButton {\\n  height: 38px;\\n}\\n\\n.middle {\\n  transition: .5s ease;\\n  opacity: 0;\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  -ms-transform: translate(-50%, -50%);\\n  text-align: center;\\n}\\n\\n.containerPic:hover .image {\\n  opacity: 0.3;\\n}\\n\\n.containerPic:hover .middle {\\n  opacity: 1;\\n}\\n\\n.image-background {\\n  background: #555555;\\n  display: table;\\n  width: 100%;\\n  height: 100%;\\n  position: relative;\\n  overflow: hidden;\\n}\\n\\n.containerPic {\\n  position: relative;\\n}\\n\\n.mat-card-image {\\nmargin: 0px;\\nmargin-left: 8.099%;\\nmargin-right: 10%;\\ndisplay: block;\\nheight: 490px;\\nmax-height: 500px;\\nmax-width: 85%;\\ntransition: .5s ease;\\n-webkit-backface-visibility: hidden;\\n        backface-visibility: hidden;\\nopacity: 1;\\n}\\n\\n.mat-grid-tile {\\n  overflow: unset;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci91c2VyLXBhZ2UvdXNlci1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQix5RUFBeUU7QUFDM0U7O0FBRUE7RUFDRSw4Q0FBOEM7RUFDOUMsc0JBQXNCOztBQUV4Qjs7QUFDQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtBQUNBLHlCQUF5QjtBQUN6QixnQ0FBZ0M7QUFDaEMsaUJBQWlCO0FBQ2pCLFlBQVk7O0FBRVo7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7QUFDZDs7QUFJQTtBQUNBLGdCQUFnQjtBQUNoQix5QkFBeUI7QUFDekIsZ0NBQWdDO0FBQ2hDLGFBQWE7QUFDYixvQkFBb0I7QUFDcEIsa0JBQWtCO0FBQ2xCLHlFQUF5RTtBQUN6RTs7QUFFQTtBQUNBLFdBQVc7QUFDWCxZQUFZO0FBQ1osaUJBQWlCO0FBQ2pCLHlFQUF5RTtBQUN6RTs7QUFFQTtBQUNBLFdBQVc7QUFDWCxXQUFXO0FBQ1gsdUJBQXVCOztBQUV2Qjs7QUFFQTtBQUNBLFdBQVc7QUFDWDs7QUFJQTtBQUNBLFdBQVc7QUFDWCxZQUFZO0FBQ1o7O0FBRUE7QUFDQSxxQkFBcUI7QUFDckIsV0FBVztBQUNYLFlBQVk7QUFDWjs7QUFFQTtBQUNBLHNCQUFzQjtBQUN0QixpQkFBaUI7O0FBRWpCOztBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCLFlBQVk7QUFDWixpQkFBaUI7QUFDakIsa0JBQWtCO0FBQ2xCLGtCQUFrQjtBQUNsQjs7QUFFQTtBQUNBLFdBQVc7QUFDWDs7QUFFQTtBQUNBLGdCQUFnQjtBQUNoQixnQkFBZ0I7QUFDaEIsV0FBVztBQUNYOztBQUVBO0FBQ0EsVUFBVTtBQUNWLGdCQUFnQjtBQUNoQixtQkFBbUI7QUFDbkIsc0NBQXNDO0FBQ3RDLG1CQUFtQjtBQUNuQjs7QUFFQTtBQUNBLG9CQUFvQjtBQUNwQixnQkFBZ0I7QUFDaEIsbUJBQW1CO0FBQ25CLFlBQVk7QUFDWjs7QUFFQTtJQUNJLHVCQUF1QjtJQUN2QixTQUFTO0lBQ1QsWUFBWTtJQUNaLFlBQVk7QUFDaEI7O0FBRUE7O0lBRUksdUJBQXVCO0lBQ3ZCLFlBQVk7SUFDWixZQUFZO0FBQ2hCOztBQUVBO0VBQ0UsV0FBVztFQUNYLGlCQUFpQjtFQUNqQixrQkFBa0I7QUFDcEI7O0FBSUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxvQkFBb0I7RUFDcEIsVUFBVTtFQUNWLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsU0FBUztFQUNULGdDQUFnQztFQUNoQyxvQ0FBb0M7RUFDcEMsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUdBO0VBQ0UsbUJBQW1CO0VBQ25CLGNBQWM7RUFDZCxXQUFXO0VBQ1gsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBR0E7QUFDQSxXQUFXO0FBQ1gsbUJBQW1CO0FBQ25CLGlCQUFpQjtBQUNqQixjQUFjO0FBQ2QsYUFBYTtBQUNiLGlCQUFpQjtBQUNqQixjQUFjO0FBQ2Qsb0JBQW9CO0FBQ3BCLG1DQUEyQjtRQUEzQiwyQkFBMkI7QUFDM0IsVUFBVTtBQUNWOztBQUdBO0VBQ0UsZUFBZTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci1wYWdlL3VzZXItcGFnZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnVzZXJjYXJkMSB7XG4gIG1hcmdpbi10b3A6IDMwcHg7XG4gIHBhZGRpbmc6IDBweDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBib3gtc2hhZG93OiAwIDRweCA4cHggMCByZ2JhKDAsMCwwLDAuMiksIDAgNnB4IDIwcHggMCByZ2JhKDAsIDAsIDAsIDAuMTkpO1xufVxuXG4ubWF0LWNhcmQtYXZhdGFyIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcvYXNzZXRzL3VzZXJQaG90by5wbmcnKTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcblxufVxuLm1hdC1jYXJkLWFjdGlvbnMge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4ubGlzdC1oZWFkZXItdGl0bGUge1xuY29sb3I6IHJnYmEoMCwgMCwgMCwgLjU0KTtcbmJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4wNjIpO1xuZm9udC13ZWlnaHQ6IGJvbGQ7XG5wYWRkaW5nOiAwcHg7XG5cbn1cblxuLm1hdC1jYXJkLWhlYWRlciB7XG4gIHBhZGRpbmctbGVmdDogMTBweDtcbiAgcGFkZGluZy10b3A6IDEwcHg7IFxufVxuXG4ubWF0LXJhaXNlZC1idXR0b24ge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG5cblxuLnVzZXJjYXJkMiB7XG5tYXJnaW4tdG9wOiAzMHB4O1xuY29sb3I6IHJnYmEoMCwgMCwgMCwgLjU0KTtcbmJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4wNjIpO1xuaGVpZ2h0OiA4Ni41JTtcbnBhZGRpbmctYm90dG9tOiAyNXB4O1xuYm9yZGVyLXJhZGl1czogNXB4O1xuYm94LXNoYWRvdzogMCA0cHggOHB4IDAgcmdiYSgwLDAsMCwwLjIpLCAwIDZweCAyMHB4IDAgcmdiYSgwLCAwLCAwLCAwLjE5KTtcbn1cblxuLnZpZXdwb3J0IHtcbndpZHRoOiAxMDAlO1xuaGVpZ2h0OiAxMDAlO1xubWFyZ2luLWxlZnQ6IDQwcHg7XG5ib3gtc2hhZG93OiAwIDRweCA4cHggMCByZ2JhKDAsMCwwLDAuMiksIDAgNnB4IDIwcHggMCByZ2JhKDAsIDAsIDAsIDAuMTkpO1xufVxuXG4uY2RrLXZpcnR1YWwtc2Nyb2xsLXZpZXdwb3J0IHtcbmhlaWdodDogNzAlO1xubWFyZ2luOiAwcHg7XG5iYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcblxufVxuXG4uZXhhbXBsZS1mb3JtIC5tYXQtZm9ybS1maWVsZCB7XG5tYXJnaW46IDBweDtcbn1cblxuXG5cbi5tYXQtbGlzdCB7XG53aWR0aDogMTAwJTtcbmhlaWdodDogMTAwJTtcbn1cblxuLmdyaWQtY29udGFpbmVyIHtcbmdyaWQ6IGF1dG8tZmxvdyAvIDFmcjtcbndpZHRoOiAxMDAlO1xuaGVpZ2h0OiAxMDAlO1xufVxuXG4uZ3JpZC1zZWFyY2gge1xuZ3JpZC1hcmVhOiBncmlkLXNlYXJjaDtcbm1hcmdpbi1sZWZ0OiAyNXB4O1xuXG59XG4uZ3JpZC1pdGVtIHtcbmdyaWQtYXJlYTogZ3JpZC1pdGVtO1xuaGVpZ2h0OiAxMDAlO1xubWFyZ2luLWxlZnQ6IDI1cHg7XG5tYXJnaW4tcmlnaHQ6IDI1cHg7XG5tYXJnaW4tYm90dG9tOiAwcHg7XG59XG5cbi5tYXQtY2hpcC1saXN0IHtcbm1hcmdpbjogMXB4O1xufVxuXG4uZXhhbXBsZS1mb3JtIHtcbm1pbi13aWR0aDogMTUwcHg7XG5tYXgtd2lkdGg6IDUwMHB4O1xud2lkdGg6IDEwMCU7XG59XG5cbi5leGFtcGxlLWZ1bGwtd2lkdGgge1xud2lkdGg6IDgwJTtcbm1hcmdpbi10b3A6IDE1cHg7XG5tYXJnaW4tYm90dG9tOiAxNXB4O1xuYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjY3MSk7XG5ib3JkZXItcmFkaXVzOiAxNXB4O1xufVxuXG4ud3JhcHBlciB7XG5kaXNwbGF5OmlubGluZS1ibG9jaztcbm1hcmdpbi10b3A6IDEwcHg7XG5tYXJnaW4tYm90dG9tOiAxNXB4O1xuaGVpZ2h0OiAzMHB4O1xufVxuXG5pbnB1dCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyOiAzO1xuICAgIHdpZHRoOiAyMDBweDtcbiAgICBoZWlnaHQ6IDMwcHg7XG59XG5cbmJ1dHRvbiB7XG4gICAgXG4gICAgYm9yZGVyOiBzb2xpZCBibGFjayAxcHg7XG4gICAgd2lkdGg6IDEwMHB4O1xuICAgIGhlaWdodDogMzhweDtcbn1cblxuLm1hdC1mbGF0LWJ1dHRvbiAge1xuICB3aWR0aDogYXV0bztcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogMTBweDsgXG59XG5cblxuXG4udXBsb2FkQnV0dG9uIHtcbiAgaGVpZ2h0OiAzOHB4O1xufVxuXG4ubWlkZGxlIHtcbiAgdHJhbnNpdGlvbjogLjVzIGVhc2U7XG4gIG9wYWNpdHk6IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uY29udGFpbmVyUGljOmhvdmVyIC5pbWFnZSB7XG4gIG9wYWNpdHk6IDAuMztcbn1cblxuLmNvbnRhaW5lclBpYzpob3ZlciAubWlkZGxlIHtcbiAgb3BhY2l0eTogMTtcbn1cblxuXG4uaW1hZ2UtYmFja2dyb3VuZCB7XG4gIGJhY2tncm91bmQ6ICM1NTU1NTU7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5jb250YWluZXJQaWMge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cblxuLm1hdC1jYXJkLWltYWdlIHtcbm1hcmdpbjogMHB4O1xubWFyZ2luLWxlZnQ6IDguMDk5JTtcbm1hcmdpbi1yaWdodDogMTAlO1xuZGlzcGxheTogYmxvY2s7XG5oZWlnaHQ6IDQ5MHB4O1xubWF4LWhlaWdodDogNTAwcHg7XG5tYXgtd2lkdGg6IDg1JTtcbnRyYW5zaXRpb246IC41cyBlYXNlO1xuYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xub3BhY2l0eTogMTtcbn1cblxuXG4ubWF0LWdyaWQtdGlsZSB7XG4gIG92ZXJmbG93OiB1bnNldDtcbn1cbiJdfQ== */\"","module.exports = \"<!--\\n  fxLayout.lt-sm=\\\"column\\\"  : Will only be applied when the viewport is less thatn small.\\n  fxLayout = \\\"row\\\"         : If ;using big screens, display data in rows\\n  fxLayout.xs =\\\"column\\\" ;  : using small screens, display data in columns\\n  fxLayoutWrap             : Will wrap this div for us so that flex will be applied\\n  fxLayoutGap = 20%;       : Will give us a gap bewteen each fxFlex\\n-->\\n  <div class = \\\"container\\\" fxLayout = \\\"row\\\" fxLayout.xs = \\\"column\\\" fxLayoutWrap fxLayoutAlign=\\\"center\\\">\\n\\n    <div fxFlex = \\\"40%\\\" fxFlex.xs = \\\"80%\\\">\\n        <mat-card class=\\\"usercard1\\\">\\n          \\n                <mat-card-header class=\\\"list-header-title\\\">\\n\\n                    <div mat-card-avatar></div>\\n                      <mat-card-title>{{ userData?.name }}</mat-card-title>\\n                      <mat-card-subtitle>{{ userData?.username }}</mat-card-subtitle>\\n                      <button mat-flat-button color=\\\"primary\\\" (click) = \\\"openDialog1()\\\" *ngIf=\\\"canEdit\\\">Edit</button>\\n                      <button mat-flat-button color=\\\"primary\\\" (click) = \\\"messageUser()\\\" *ngIf=\\\"canMessage\\\">Message</button>\\n                </mat-card-header>  \\n\\n              \\n                <div class=\\\"containerPic\\\">\\n                  <div class=\\\"image-background\\\">\\n                      <div class=\\\"image-container\\\">\\n                          <img mat-card-image [src] = \\\"imageLink\\\"\\n                          onerror=\\\"this.onerror=null; this.src = 'assets/userPhoto.png';\\\"\\n                           class=\\\"image\\\">\\n                      </div> \\n\\n                      <div class=\\\"middle\\\"  *ngIf=\\\"canEdit\\\">\\n                        <button mat-raised-button class=\\\"text\\\" (click) = \\\"openDialog4()\\\">Change Picture</button>\\n                      </div>\\n                    </div>  \\n                  </div>\\n\\n                <!--img mat-card-image -->\\n                <mat-card-content>\\n                \\n                <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"4:1\\\" class=\\\"user-links\\\">\\n                    <mat-grid-tile>\\n                          <button mat-raised-button color=\\\"warm\\\" (click) = \\\"onNavigateGithub()\\\" >{{ userData?.github }}</button>\\n                    </mat-grid-tile>\\n                    \\n                    <mat-grid-tile>\\n                        <button mat-raised-button color=\\\"primary\\\" (click) = \\\"onNavigateLinkedIn()\\\">{{ userData?.linkedin }}</button>\\n                    </mat-grid-tile>\\n                </mat-grid-list>\\n\\n              </mat-card-content>\\n        </mat-card>\\n    </div>\\n\\n    <div fxFlex = \\\"40%\\\" fxFlex.xs = \\\"80%\\\">\\n      <div class=\\\"usercard2\\\">\\n        <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"2:1\\\">\\n          <!-- Will hold class list -->\\n            <mat-grid-tile>\\n            <div class =\\\"grid-container\\\">  \\n              <div class = \\\"grid-search\\\">\\n                  <div class=\\\"wrapper\\\">\\n                      <button (click) = \\\"openDialog2()\\\" mat-flat-button color=\\\"primary\\\" *ngIf=\\\"canEdit\\\"> Update </button>\\n                  </div>\\n              </div>\\n              \\n              <div class = \\\"grid-item\\\">\\n                  <cdk-virtual-scroll-viewport itemSize=\\\"classes.size\\\" class=\\\"viewport\\\">\\n                      <mat-chip-list>\\n                        <mat-chip *ngFor = \\\"let class of userData?.classes\\\">\\n                          {{ class }}\\n                        </mat-chip>\\n                      </mat-chip-list>\\n                    </cdk-virtual-scroll-viewport>\\n                </div>\\n            </div>    \\n            </mat-grid-tile>\\n            <br>\\n            <br>\\n            <br>\\n          <!-- Will hold the skill list -->\\n          <mat-grid-tile>\\n              <div class =\\\"grid-container\\\">  \\n                  <div class = \\\"grid-search\\\">\\n                      <div class=\\\"wrapper\\\">\\n                          <button (click) = \\\"openDialog3()\\\" mat-flat-button color=\\\"primary\\\" *ngIf=\\\"canEdit\\\"> Update </button>\\n                      </div>\\n                  </div>\\n                  <div class = \\\"grid-item\\\">\\n                      <cdk-virtual-scroll-viewport itemSize=\\\"skills.size\\\" class=\\\"viewport\\\">\\n                          <mat-chip-list>\\n                            <mat-chip *ngFor = \\\"let skill of userData?.skills\\\">\\n                              {{ skill }}\\n                            </mat-chip>  \\n                          </mat-chip-list>\\n                        </cdk-virtual-scroll-viewport>\\n                    </div>\\n                </div>\\n          </mat-grid-tile>\\n        </mat-grid-list>\\n      </div>\\n    </div>\\n  </div>\"","import { EditPictureComponent } from './../edit-picture/edit-picture.component';\nimport { EditSkillsComponent } from './../edit-skills/edit-skills.component';\nimport { EditClassesComponent } from './../edit-classes/edit-classes.component';\nimport { EditUserFormComponent } from './../edit-user-form/edit-user-form.component';\nimport { Component, OnInit,ChangeDetectionStrategy } from '@angular/core';\nimport { UserService } from 'src/app/shared/dbAccess/user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserModel } from 'src/app/shared/models/user.model';\nimport { FormControl, Form, FormGroup, FormBuilder } from '@angular/forms';\nimport { Observable } from 'rxjs/Observable';\nimport { MatDialog } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-user-page',\n  templateUrl: './user-page.component.html',\n  styleUrls: ['./user-page.component.css']\n})\nexport class UserPageComponent implements OnInit {\n  canEdit:boolean;\n  canMessage: boolean;\n  //Will hold our user data.\n  userData: UserModel;\n  username: string;\n  imageLink: any;\n  \n  \n  //Auto complete variables.\n  classesForm: FormGroup;\n  filteredUsers: String[] = [];\n  isLoading = false;\n  userClass:UserModel[\"classes\"];\n  userSkill:UserModel[\"skills\"];\n  \n\n  //place holder of image\n  public imageToShow: any;\n\n  //default variable for selected file.\n  fileToUpload: File = null;\n\n  /**\n  * @author Edwin Quintuna\n  * \n  *\t@brief Constructor that will create an instance of UserPageComponent \n  *        and allow us to inject our dependencies; services that will be needed in the component\n  *\n  *\t@param[userService]  ,  service that will handle both retrival and updating user data via http requests\n  *\t@param[activeRoute]  ,  will allow us to retrieve path parameters if they are set\n  *\t@param[dialog]       ,  will open a \n  *\t@return nothing\n  */\n  constructor(\n    private userService : UserService,\n    private router : Router, \n    private formBuilder: FormBuilder,\n    private activeRoute: ActivatedRoute,\n    public dialog: MatDialog)\n    {}\n\n  /**\n  * @author Edwin Quintuna\n  * \n  *\t@brief Function that will be called once the Angular has finished initializing and setting up the component\n  *        This function is async as we need to wait for data to be retrieved before setting values or doing logic\n  *\n  *\t@return nothing\n  */\n  async ngOnInit() {\n\n    //Will retrieve the 'username' parameter from the url if set.\n    await this.activeRoute.paramMap\n    .subscribe(params => {\n      this.username = params.get('username');\n    })\n\n    //Will set the 'canEdit' boolean variable depending if the user viewing the page is the owner. \n    //If so, allow that user to edit his page fields.\n    await this.userService.getUserdetails()\n      .subscribe(res => { \n                if(res['username'] === this.username || this.username == null){\n                  this.canEdit = true;\n                }else{\n                  this.canEdit = false;\n                  this.canMessage = true;\n                }  \n              \n              }); \n    //Load the user data that will be displayed in our html files\n    this.loadUserData(this.username);\n  }\n\n  messageUser() {\n    this.router.navigate(['/conversations/message/', this.username]);\n  }\n\n  /**\n  * @author Edwin Quintuna\n  * \n  *\t@brief Function that will load a users data or another users data, depending on whether the variable\n  *        'username' has been set from the url parameter.\n  *\n  *\t@param[username]  ,  variable that will store the username retrieved from the url parameter\n  *\t@return nothing\n  */\n  loadUserData(username: string){\n\n    //If username is set, retrieve data for that user\n    //Else retrieve the data of the current user logged in\n    if(username){\n      this.userService.getMemberdetails(username).subscribe(userData => {\n        this.userData = userData;\n        this.userClass= userData[\"classes\"];\n        this.userSkill= userData[\"skills\"];\n      });\n      this.profileMemberPicture(username);\n\n    } else {\n      this.userService.getUserdetails().subscribe(userData => {\n        this.userData = userData;\n        this.userClass= userData[\"classes\"];\n        this.userSkill= userData[\"skills\"];\n      });\n      this.profilePicture();\n    }\n  }  \n\n  profilePicture(){\n    this.userService.getPicture().subscribe( (link) => {\n      console.log(link);\n      this.imageLink = 'http://' + link;\n      console.log(this.imageLink);\n     })\n  }\n  profileMemberPicture(username: string){\n    this.userService.getMemberPicture(username).subscribe((link)=>{\n     this.imageLink = 'http://' + link;\n    })\n  }\n\n  /**\n  * @author Edwin Quintuna\n  * \n  *\t@brief Function that will open a dialog window with the content of EditUserFormComponent\n  *        The window will open on the same screen, using the same data as the current screen\n  *\n  *\t@return nothing\n  */\n  openDialog1(): void {\n    //Dialog refeerence that will handle the closing of the dialog and to receive \n    //notifiations when the dialog has been closed\n    const dialogRef = this.dialog.open(EditUserFormComponent, {\n      width: '50%',\n      //Data that will be passed to the dialog\n      data: {\n        userData: this.userData\n      }\n    });\n    //Logic done after the dialog has been closed from the dialog window\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n    });\n  }\n\n  /**\n  * @author Edwin Quintuna\n  * \n  *\t@brief Function that will open a dialog window with the content of EditClassesComponent\n  *        The window will open on the same screen, using the same data as the current screen\n  *\n  *\t@return nothing\n  */\n  openDialog2(): void {\n    //Dialog refeerence that will handle the closing of the dialog and to receive \n    //notifiations when the dialog has been closed\n    const dialogRef = this.dialog.open(EditClassesComponent, {\n      width: '95%',\n      data: {\n        userData: this.userData\n      }\n    });\n    //Logic done after the dialog has been closed from the dialog window\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n    });\n  }\n\n  /**\n  * @author Edwin Quintuna\n  * \n  *\t@brief Function that will open a dialog window with the content of EditSkillsComponent\n  *        The window will open on the same screen, using the same data as the current screen\n  *\n  *\t@return nothing\n  */\n  openDialog3(): void {\n    //Dialog refeerence that will handle the closing of the dialog and to receive \n    //notifiations when the dialog has been closed\n    const dialogRef = this.dialog.open(EditSkillsComponent, {\n      width: '70%',\n      data: {\n        userData: this.userData\n      }\n    });\n    //Logic done after the dialog has been closed from the dialog window\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n    });\n  }\n\n  /**\n  * @author Edwin Quintuna\n  * \n  *\t@brief Function that will open a dialog window with the content of EditPictureComponent\n  *        The window will open on the same screen, using the same data as the current screen\n  *\n  *\t@return nothing\n  */\n  openDialog4(){\n    //Dialog refeerence that will handle the closing of the dialog and to receive \n    //notifiations when the dialog has been closed\n    const dialogRef = this.dialog.open(EditPictureComponent, {\n      width: '280px',\n      data: {\n        userData: this.userData\n      }\n    });\n    //Logic done after the dialog has been closed from the dialog window\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed' + result);\n      if(result == true){\n      \n      }\n    });\n\n  }\n\n  changeProfilePic(){\n    console.log(\"Change profile pic.\")\n  }\n\n  /**\n  * @author Edwin Quintuna\n  * \n  *\t@brief Function that will redirect to a users github page and will open on a separate window\n  *\n  *\t@return nothing\n  */\n  onNavigateGithub(){\n    window.open( \"https://\" + (this.userData).github , \"_blank\");\n  }\n\n  /**\n  * @author Edwin Quintuna\n  * \n  *\t@brief Function that will redirect to a users linkedIn page and will open on a separate window\n  *\n  *\t@return nothing\n  */\n  onNavigateLinkedIn(){\n    window.open( \"https://\" + (this.userData).linkedin , \"_blank\");\n  }\n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserPageComponent } from './user-page/user-page.component';\n\n\n/** \n*\t@brief Configure the routes for the feature module. Once loaded, we have \n*        access to the components declared in the feature module\n*\n*\t@param[routes] ,  array that will contain our routes\n*\t@param[path]       ,  string that will redirect to the module specified on 'loadChildren'\n*\t@param[component]       , component to be loaded depending on the 'path' that was taken\n*\t@return nothing\n*/\nconst routes: Routes = [\n  {\n    //Path to UserPageComponent, which places the parameter ':username' in the path\n    //':username' will be used to retrieve that specific users data \n    path:':username',\n    component: UserPageComponent\n  },\n  {\n    //This is the default path the user will enter if the url is /user\n    path:'',\n    component: UserPageComponent\n\n  }\n];\n\n@NgModule({\n  //Lets angular know that the route list is only responsible \n  //for providing additional routes and intended for feature modules\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { UserPageComponent } from './user-page/user-page.component';\n\n//Material Components\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatGridListModule }  from '@angular/material/grid-list';\nimport { MatListModule }  from '@angular/material/list';\nimport { EditUserFormComponent } from './edit-user-form/edit-user-form.component';\nimport { EditClassesComponent } from './edit-classes/edit-classes.component';\nimport { EditSkillsComponent } from './edit-skills/edit-skills.component';\nimport { EditPictureComponent } from './edit-picture/edit-picture.component';\n\n@NgModule({\n  declarations: [UserPageComponent, EditUserFormComponent, EditClassesComponent, EditSkillsComponent, EditPictureComponent],\n  imports: [\n    CommonModule,\n    UserRoutingModule,\n\n    //Angular Material\n    MatTabsModule,\n    MatCardModule,\n    MatIconModule,\n    MatButtonModule,\n    MatInputModule,\n    MatGridListModule,\n    MatListModule,\n    ScrollDispatchModule,\n    MatChipsModule,\n    MatAutocompleteModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatDialogModule,\n\n    //Flex Module\n    FlexLayoutModule,\n\n    //Template Driven Forms\n    FormsModule,\n\n    //\n    ReactiveFormsModule,\n\n  ],\n  entryComponents: [\n    EditUserFormComponent,\n    EditClassesComponent,\n    EditSkillsComponent,\n    EditPictureComponent\n  ]\n})\nexport class UserModule { }\n"],"sourceRoot":""}