{"version":3,"sources":["webpack:///./src/app/home/collab-card/collab-card.component.css","webpack:///./src/app/home/collab-card/collab-card.component.html","webpack:///./src/app/home/collab-card/collab-card.component.ts","webpack:///./src/app/home/collab-list/home.component.css","webpack:///./src/app/home/collab-list/home.component.html","webpack:///./src/app/home/collab-list/home.component.ts","webpack:///./src/app/home/collab-table/collab-table.component.css","webpack:///./src/app/home/collab-table/collab-table.component.html","webpack:///./src/app/home/collab-table/collab-table.component.ts","webpack:///./src/app/home/create-collab/create-collab.component.css","webpack:///./src/app/home/create-collab/create-collab.component.html","webpack:///./src/app/home/create-collab/create-collab.component.ts","webpack:///./src/app/home/edit-collab/edit-collab.component.css","webpack:///./src/app/home/edit-collab/edit-collab.component.html","webpack:///./src/app/home/edit-collab/edit-collab.component.ts","webpack:///./src/app/home/home-routing.module.ts","webpack:///./src/app/home/home.module.ts","webpack:///./src/app/shared/models/collab.model.ts","webpack:///./src/app/shared/models/tableBuilder.model.ts"],"names":[],"mappings":"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","file":"home-home-module.js","sourcesContent":["module.exports = \".mat-card {\\n    max-width: 800px;\\n    margin: auto;\\n    padding: 0px;\\n    height: 100%;\\n    background: rgba(214, 212, 212, 0.048);\\n    border: .4px solid rgb(59, 59, 59);\\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n}\\n\\n.mat-card-header {\\n   \\n    font-weight: bold;\\n    display: inline;\\n    \\n}\\n\\n.mat-card-title  {\\n    margin-left: -16.5px;\\n    margin-right: -16px;\\n    margin-top: -.5px;\\n    color: rgba(0, 0, 0, 0.836);\\n    background: rgba(34, 34, 34, 0.13);\\n    padding: 5px;\\n}\\n\\n.mat-card-content {\\n    margin: 0px;\\n}\\n\\n.mat-card>.mat-card-actions:last-child {\\n    margin-bottom: 5px;\\n   \\n}\\n\\n.mat-card-actions .mat-button, .mat-card-actions .mat-raised-button{\\n    margin: 0px;\\n    margin-left: 22px;\\n}\\n\\n.mat-expansion-panel {\\n    background: rgba(255, 254, 254, 0.151);\\n}\\n\\n.requirements {\\n    margin-left: 30px;\\n    margin-right: 30px;\\n    \\n}\\n\\n.pull-right {\\n    display:flex;\\n    margin-left:auto; \\n    margin-right:0;\\n}\\n\\n.center {\\n    display:flex;\\n    margin:auto;\\n    margin-top:10px;\\n}\\n\\n.pull-left {\\n    display:flex;\\n    margin-left:0; \\n    margin-right:auto;\\n}\\n\\n.content .description{\\n    font-size: 20px;\\n    margin-left: 30px;\\n    margin-right: 30px;\\n    margin-bottom: 10px;\\n}\\n\\n.content .date,.location,.duration{\\n    margin-left: 40px;\\n    margin-right: 40px;\\n}\\n\\n.table{\\n    width: 100%;\\n    height: 100%;\\n    overflow-x:  auto;\\n    overflow-y:  auto;\\n}\\n\\n.mat-card {\\n    font-family: Georgia, 'Times New Roman', Times, serif;\\n}\\n\\n\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9jb2xsYWItY2FyZC9jb2xsYWItY2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWixZQUFZO0lBQ1osWUFBWTtJQUNaLHNDQUFzQztJQUN0QyxrQ0FBa0M7SUFDbEMseUVBQXlFO0FBQzdFOztBQUVBOztJQUVJLGlCQUFpQjtJQUNqQixlQUFlOztBQUVuQjs7QUFFQTtJQUNJLG9CQUFvQjtJQUNwQixtQkFBbUI7SUFDbkIsaUJBQWlCO0lBQ2pCLDJCQUEyQjtJQUMzQixrQ0FBa0M7SUFDbEMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGtCQUFrQjs7QUFFdEI7O0FBQ0E7SUFDSSxXQUFXO0lBQ1gsaUJBQWlCO0FBQ3JCOztBQUNBO0lBQ0ksc0NBQXNDO0FBQzFDOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGtCQUFrQjs7QUFFdEI7O0FBR0E7SUFDSSxZQUFZO0lBQ1osZ0JBQWdCO0lBQ2hCLGNBQWM7QUFDbEI7O0FBR0E7SUFDSSxZQUFZO0lBQ1osV0FBVztJQUNYLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osYUFBYTtJQUNiLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixrQkFBa0I7QUFDdEI7O0FBR0E7SUFDSSxXQUFXO0lBQ1gsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxxREFBcUQ7QUFDekQiLCJmaWxlIjoic3JjL2FwcC9ob21lL2NvbGxhYi1jYXJkL2NvbGxhYi1jYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNhcmQge1xuICAgIG1heC13aWR0aDogODAwcHg7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIHBhZGRpbmc6IDBweDtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgYmFja2dyb3VuZDogcmdiYSgyMTQsIDIxMiwgMjEyLCAwLjA0OCk7XG4gICAgYm9yZGVyOiAuNHB4IHNvbGlkIHJnYig1OSwgNTksIDU5KTtcbiAgICBib3gtc2hhZG93OiAwIDRweCA4cHggMCByZ2JhKDAsMCwwLDAuMiksIDAgNnB4IDIwcHggMCByZ2JhKDAsIDAsIDAsIDAuMTkpO1xufVxuXG4ubWF0LWNhcmQtaGVhZGVyIHtcbiAgIFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICBcbn1cblxuLm1hdC1jYXJkLXRpdGxlICB7XG4gICAgbWFyZ2luLWxlZnQ6IC0xNi41cHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAtMTZweDtcbiAgICBtYXJnaW4tdG9wOiAtLjVweDtcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjgzNik7XG4gICAgYmFja2dyb3VuZDogcmdiYSgzNCwgMzQsIDM0LCAwLjEzKTtcbiAgICBwYWRkaW5nOiA1cHg7XG59XG5cbi5tYXQtY2FyZC1jb250ZW50IHtcbiAgICBtYXJnaW46IDBweDtcbn1cblxuLm1hdC1jYXJkPi5tYXQtY2FyZC1hY3Rpb25zOmxhc3QtY2hpbGQge1xuICAgIG1hcmdpbi1ib3R0b206IDVweDtcbiAgIFxufVxuLm1hdC1jYXJkLWFjdGlvbnMgLm1hdC1idXR0b24sIC5tYXQtY2FyZC1hY3Rpb25zIC5tYXQtcmFpc2VkLWJ1dHRvbntcbiAgICBtYXJnaW46IDBweDtcbiAgICBtYXJnaW4tbGVmdDogMjJweDtcbn1cbi5tYXQtZXhwYW5zaW9uLXBhbmVsIHtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU0LCAyNTQsIDAuMTUxKTtcbn1cblxuLnJlcXVpcmVtZW50cyB7XG4gICAgbWFyZ2luLWxlZnQ6IDMwcHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAzMHB4O1xuICAgIFxufVxuXG5cbi5wdWxsLXJpZ2h0IHtcbiAgICBkaXNwbGF5OmZsZXg7XG4gICAgbWFyZ2luLWxlZnQ6YXV0bzsgXG4gICAgbWFyZ2luLXJpZ2h0OjA7XG59XG5cblxuLmNlbnRlciB7XG4gICAgZGlzcGxheTpmbGV4O1xuICAgIG1hcmdpbjphdXRvO1xuICAgIG1hcmdpbi10b3A6MTBweDtcbn1cbiAgXG4ucHVsbC1sZWZ0IHtcbiAgICBkaXNwbGF5OmZsZXg7XG4gICAgbWFyZ2luLWxlZnQ6MDsgXG4gICAgbWFyZ2luLXJpZ2h0OmF1dG87XG59XG5cbi5jb250ZW50IC5kZXNjcmlwdGlvbntcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgbWFyZ2luLWxlZnQ6IDMwcHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAzMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbi5jb250ZW50IC5kYXRlLC5sb2NhdGlvbiwuZHVyYXRpb257XG4gICAgbWFyZ2luLWxlZnQ6IDQwcHg7XG4gICAgbWFyZ2luLXJpZ2h0OiA0MHB4O1xufVxuXG5cbi50YWJsZXtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgb3ZlcmZsb3cteDogIGF1dG87XG4gICAgb3ZlcmZsb3cteTogIGF1dG87XG59XG5cbi5tYXQtY2FyZCB7XG4gICAgZm9udC1mYW1pbHk6IEdlb3JnaWEsICdUaW1lcyBOZXcgUm9tYW4nLCBUaW1lcywgc2VyaWY7XG59XG5cblxuXG5cbiJdfQ== */\"","module.exports = \"<mat-card>\\n  <mat-card-header >\\n\\n   \\n      <mat-card-title> \\n          <mat-panel-title>\\n              <span class = \\\"center\\\" >{{collabData?.title}}</span>\\n          </mat-panel-title>\\n          <mat-panel-description>\\n              <span class = \\\"pull-right\\\" ><mat-icon>group</mat-icon> : {{collabData?.members.length}} / {{ collabData?.size}}</span>\\n          </mat-panel-description>\\n      </mat-card-title>\\n\\n  </mat-card-header>\\n  <mat-card-content>\\n    <mat-accordion>\\n        <div class = \\\"content\\\">\\n            <p class=\\\"description\\\">{{ collabData?.description }} </p>\\n            <p class=\\\"date\\\">Date: {{ collabData?.date | date:'medium' }}</p>\\n            <p class=\\\"duration\\\">Apply By: {{ collabData?.duration | date:'medium' }}</p>\\n            <p class=\\\"location\\\">Location: {{ collabData?.location }}</p>\\n            <mat-divider></mat-divider><br />\\n            <div class = \\\"requirements\\\">\\n                <mat-chip-list>\\n                    Classes: \\n                    <mat-chip *ngFor = \\\"let class of collabData?.classes\\\">\\n                      {{ class }}\\n                    </mat-chip>\\n                </mat-chip-list>\\n                <br>\\n                <mat-chip-list>\\n                    Skills: \\n                    <mat-chip *ngFor=\\\"let skill of collabData?.skills\\\">\\n                      {{ skill }}\\n                    </mat-chip>\\n                </mat-chip-list>\\n            </div>\\n      \\n        </div>\\n        <br>\\n        \\n        <!-- Event Binding: In this case the event is (opened) -->\\n        <mat-expansion-panel \\n                       (opened)=\\\"panelWasOpen1()\\\"\\n                       (closed)=\\\"panelOpenState1 = false\\\">\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n              <h4>Members</h4>\\n          </mat-panel-title>\\n          <mat-panel-description>\\n          </mat-panel-description>\\n          </mat-expansion-panel-header>\\n\\n            <ng-container class=\\\"table-container\\\">\\n              <div class=\\\"table\\\">\\n                <collab-table [table] = \\\"table\\\" [xAxisReq] = \\\"xAxisReq\\\"></collab-table>\\n              </div>\\n            </ng-container>\\n          \\n          \\n        </mat-expansion-panel>\\n    </mat-accordion>\\n    \\n  </mat-card-content>\\n\\n  <mat-expansion-panel \\n                       (opened)=\\\"panelWasOpen2()\\\"\\n                       (closed)=\\\"panelOpenState2 = false\\\">\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            <h4>Actions</h4>\\n          </mat-panel-title>\\n          <mat-panel-description>\\n          </mat-panel-description>\\n          </mat-expansion-panel-header>\\n            <mat-card-actions>\\n              <button *ngIf=\\\"checkPartOf() == false\\\" mat-raised-button color = \\\"primary\\\" (click) = \\\"joinCollab()\\\"  > Join </button>\\n              <button *ngIf=\\\"checkPartOf() == true\\\"  mat-raised-button color = \\\"primary\\\" (click) = \\\"leaveCollab()\\\" > Leave </button>\\n              <button *ngIf=\\\"checkOwner() == true\\\"   mat-raised-button color = \\\"primary\\\" (click) = \\\"deleteCollab()\\\"> Delete </button>\\n              <button *ngIf=\\\"checkOwner() == true\\\"   mat-raised-button color = \\\"primary\\\" (click) = \\\"editCollab()\\\">    Edit</button>\\n            </mat-card-actions>   \\n        </mat-expansion-panel>\\n\\n  \\n\\n</mat-card>\"","import { CollabsService } from 'src/app/shared/dbAccess/collabs.service';\nimport { UserService } from './../../shared/dbAccess/user.service';\nimport { CollabModel } from './../../shared/models/collab.model';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { TableBuilder } from 'src/app/shared/models/tableBuilder.model';\nimport { UserModel } from 'src/app/shared/models/user.model';\nimport { Router } from '@angular/router';\n\nexport interface Requirements{\n  skillOrClass: string,\n  type: string\n}\n\n@Component({\n  selector: 'collab-card',\n  templateUrl: './collab-card.component.html',\n  styleUrls: ['./collab-card.component.css']\n})\nexport class CollabCardComponent implements OnInit {\n\n  @Input() collabData: CollabModel;\n \n\n  //Values being passed to collab-table\n  table: Array<TableBuilder> = [];  \n  xAxisReq: Array<string> = [];\n  panelOpenState1 = false;\n  panelOpenState2 = false;\n\n\n  yAxisUsers: any\n  alreadyBuilt: boolean = false;\n  partOf = false; \n  isOwner = false; \n\n  //Will hold our user data.\n  userData: UserModel;\n  \n\n  constructor(private userService: UserService, \n              private collabService: CollabsService,\n              private router: Router) {\n               \n                \n              }\n\n  async ngOnInit() {\n    await this.userService.getUserdetails().subscribe(userData => this.userData = userData);\n    \n  }\n\n  /*\n  Function that will build our table. \n  async: Will allow us to do await functions\n  */\n  async makeTable(){\n\n    if(this.alreadyBuilt){\n\n    this.table = []\n    //Will store the list of users.\n    let yAxisUsers : string[];\n\n    //Fuction will stop here until function getAllRequred returns\n    this.xAxisReq = await this.getAllRequired(); \n    \n    //Will members of the collaboration\n    yAxisUsers  = this.collabData.members;\n    //console.log(\"Skills Required: \" , xAxisReq);\n    \n    //Will loop through all the users and check if they know the required skills and classes\n    for(let y of yAxisUsers){\n      //console.log(x, \" is being checked\");\n\n        //Will hold a single instance of TableBuilder modle\n        let tableRow = await this.checkIfKnown(y,this.xAxisReq);\n        this.table.push(tableRow);\n        //console.log(tableRow);\n     }\n\n    } else {\n    this.alreadyBuilt = true;\n    //Will store the list of users.\n    let yAxisUsers : string[];\n\n    //Fuction will stop here until function getAllRequred returns\n    this.xAxisReq = await this.getAllRequired(); \n    \n    //Will members of the collaboration\n    yAxisUsers  = this.collabData.members;\n    //console.log(\"Skills Required: \" , xAxisReq);\n    \n    //Will loop through all the users and check if they know the required skills and classes\n    for(let y of yAxisUsers){\n      //console.log(x, \" is being checked\");\n\n        //Will hold a single instance of TableBuilder modle\n        let tableRow = await this.checkIfKnown(y,this.xAxisReq);\n        this.table.push(tableRow);\n        //console.log(tableRow);\n     }\n    }\n    \n  }\n\n  RefreshPage(){\n    this.getAllRequired();\n    //Will members of the collaboration\n    this.yAxisUsers  = this.collabData.members;\n  } \n  \n  //WIll check if a user knows skill or class, from the list of classes and skills that a user knows\n  async checkIfKnown(userName: string, listOfRequired: string[]){\n    let tmp: TableBuilder = null;\n\n    tmp = new TableBuilder(userName);\n\n    let knownByUser;\n   \n    for(let x of listOfRequired){\n      \n      //Will return both skills and classes in a single array\n      await this.userService.getUserSkillsAndClasses(userName).then(function(result){\n        knownByUser = result;\n      });\n      \n      if(knownByUser.includes(x)){\n        //console.log(userName , \" knows \", x);\n        tmp.setKnown(x,true);\n        \n      } else {\n        //console.log(userName , \" doesn't know \", x);\n        tmp.setKnown(x,false);\n      }\n    }\n    \n    return tmp;\n  }\n\n  getAllRequired(){\n    let xAxisReq: Array<string> = [];\n    xAxisReq = (this.collabData.skills).concat(this.collabData.classes);\n\n    return xAxisReq;\n  }\n  \n  async actionCheck(){\n    await this.isUserOwner();\n    this.isPartOf();\n  }\n\n  isUserOwner(){\n    \n    if(this.collabData.owner == this.userData['username']){\n      this.isOwner = true;\n    } else {\n      this.isOwner = false;\n    }\n  }\n\n  isPartOf(){\n\n    for(let member of this.collabData.members){\n      if(member == this.userData['username']){\n        this.partOf = true;\n      }\n    }\n  }\n\n  checkPartOf(){\n    return this.partOf;\n  }\n\n  checkOwner(){\n    return this.isOwner;\n  }\n  \n  joinCollab(){\n\n    this.collabService.joinCollab(this.collabData._id)\n      .subscribe(res => { \n        if(res['success'] == true){\n          this.partOf = true;\n          this.getUpdatedData();\n        } else {\n          \n        }\n      });\n  }\n\n  leaveCollab(){\n    this.collabService.leaveCollab(this.collabData._id)\n      .subscribe(res => { \n        if(res['success'] == true){\n          this.partOf = false;\n          this.getUpdatedData();\n        } else {\n          \n        } \n      });\n  }\n\n  deleteCollab(){\n    this.collabService.deleteCollab(this.collabData._id)\n      .subscribe(res => { \n        console.log(res)\n        if(res){\n          window.location.reload();\n        }\n      })\n  }\n\n  editCollab(){\n    this.router.navigate(['/home/editcollab/',this.collabData._id[\"$oid\"]]);\n  }\n\n  getUpdatedData(){\n    this.collabService.getSingleCollab(this.collabData._id[\"$oid\"]).subscribe(\n      res => {\n        console.log(res['0'],\n        this.collabData = res['0'])\n      }\n    );\n  }\n\n  panelWasOpen1(){\n    this.panelOpenState1 = true;\n    this.makeTable()\n  }\n\n  panelWasOpen2(){\n    this.panelOpenState2 = true;\n    this.actionCheck();\n  }\n\n  \n\n\n}\n","module.exports = \"p {\\n    padding: 16px;\\n    text-align: center;\\n  \\n  }\\n\\n  .collab {\\n    margin-top:25px;\\n    margin-bottom: 30px;\\n  }\\n\\n  .add-collab-button {\\n    z-index: 5; \\n    position: fixed; \\n    display: flex;\\n    align-self: flex-end; \\n    bottom: 7%; \\n    margin-bottom: 5px;\\n    margin-left: 80%; \\n  }\\n\\n  \\n\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9jb2xsYWItbGlzdC9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2Isa0JBQWtCOztFQUVwQjs7RUFFQTtJQUNFLGVBQWU7SUFDZixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxVQUFVO0lBQ1YsZUFBZTtJQUNmLGFBQWE7SUFDYixvQkFBb0I7SUFDcEIsVUFBVTtJQUNWLGtCQUFrQjtJQUNsQixnQkFBZ0I7RUFDbEIiLCJmaWxlIjoic3JjL2FwcC9ob21lL2NvbGxhYi1saXN0L2hvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInAge1xuICAgIHBhZGRpbmc6IDE2cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBcbiAgfVxuXG4gIC5jb2xsYWIge1xuICAgIG1hcmdpbi10b3A6MjVweDtcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICB9XG5cbiAgLmFkZC1jb2xsYWItYnV0dG9uIHtcbiAgICB6LWluZGV4OiA1OyBcbiAgICBwb3NpdGlvbjogZml4ZWQ7IFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7IFxuICAgIGJvdHRvbTogNyU7IFxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcbiAgICBtYXJnaW4tbGVmdDogODAlOyBcbiAgfVxuXG4gIFxuXG4gICJdfQ== */\"","module.exports = \"   <!--\\n     selected.value: Is a value from .ts file.\\n     selectedIndex: DOM value\\n   -->\\n   <mat-tab-group [selectedIndex] = \\\"selected.value\\\" \\n                  (selectedIndexChange) =\\\"currentTab($event)\\\" mat-align-tabs=\\\"center\\\">\\n\\n      <mat-tab label=\\\"Recommended\\\">\\n        <ng-template matTabContent>\\n          <ng-container *ngFor = \\\"let collab of collabData | async\\\">\\n            <div class =\\\"collab\\\">\\n                <!-- Property binding from component to component using @Input() and @Output -->\\n                <collab-card [collabData] = \\\"collab\\\"></collab-card>\\n            </div>      \\n          </ng-container>\\n        </ng-template>\\n      </mat-tab>\\n\\n      <mat-tab label=\\\"All Collaborations\\\">\\n        <ng-template matTabContent>\\n          <ng-container *ngFor = \\\"let collab of collabData | async\\\">\\n            <div class =\\\"collab\\\">\\n                <!-- Property binding from component to component using @Input() and @Output -->\\n                <collab-card [collabData] = \\\"collab\\\"></collab-card>\\n            </div>      \\n          </ng-container>\\n        </ng-template>\\n      </mat-tab>\\n\\n      <mat-tab label=\\\"My Collabs\\\">\\n        <ng-template matTabContent>\\n            <ng-container *ngFor = \\\"let collab of collabData | async\\\">\\n              <div class =\\\"collab\\\">\\n                <!-- Property binding from component to component using @Input() and @Output -->\\n                <collab-card [collabData] = \\\"collab\\\"></collab-card>\\n              </div>      \\n            </ng-container>\\n        </ng-template>\\n      </mat-tab>\\n\\n\\n\\n   </mat-tab-group>\\n\\n   <div class = \\\"add-collab-button\\\">\\n     <a mat-fab color = \\\"primary\\\" (click) = \\\"createCollab()\\\" style=\\\"margin-right: 14px\\\">\\n      <mat-icon>add</mat-icon>\\n     </a>\\n   </div>\\n     \\n          \\n            \\n\"","import { FormControl } from '@angular/forms';\nimport { CollabsService } from './../../shared/dbAccess/collabs.service';\nimport { UserModel } from './../../shared/models/user.model';\nimport { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../shared/dbAccess/user.service';\nimport {Router } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { CollabModel } from 'src/app/shared/models/collab.model';\nimport { map, startWith } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n    userData: UserModel;\n    collabData: Observable<CollabModel[]>;\n    selected = new FormControl(0);\n\n    //Used for caching\n    CACHE_KEY_0 =  'reqCollabsCache';\n    CACHE_KEY_1 =  'activeCollabsCache';\n    CACHE_KEY_2 = 'myCollabsCache';\n\n  constructor(\n      private userService : UserService,\n      private router : Router, \n      private collabService : CollabsService)\n       {\n        this.userDetails();\n        }\n\n  ngOnInit() {\n  }\n\n  userDetails(){\n    this.userService.getUserdetails().subscribe(userData => {\n      this.userData = userData,\n      this.currentTab(0);\n    });\n  }\n  \n  userPicture(){\n    ///user/profilePicture\n    this.userService.getPicture().subscribe ((data : any ) => {\n      // BitmapImage image = new BitmapImage();\n      // image.SetSource(stream);  \n     });\n  }\n\n  // return array of JSON OBJECTS\n  collabDetails(){\n    this.collabService.collabDetails().subscribe ((data : any ) => {\n     });\n  }\n  \n\n  activeCollabs(){\n    this.collabService.activeCollabs().subscribe ((data : any ) => {\n      //console.log(data);   \n  \n     });\n  }\n\n  myCollabs(){\n    this.collabService.myCollabs().subscribe ((data : any ) => {\n      //console.log(data);   \n  \n     });\n  }\n\n  createCollab(){\n    this.router.navigate(['/home/createcollab']);\n  }\n\n  currentTab($event){\n    switch($event) {\n\n      case 0: {\n        this.collabData = this.collabService.getReqCollabs(this.userData[\"classes\"], this.userData[\"skills\"])\n        .pipe(\n          map((data : CollabModel[] )  =>  data.reverse())\n        )\n\n        this.collabData.subscribe( next => {\n          localStorage[this.CACHE_KEY_0]= JSON.stringify(next);\n        });\n\n        this.collabData = this.collabData.pipe(\n          startWith(JSON.parse(localStorage[this.CACHE_KEY_1] || '{}'))\n        )\n        break;\n      }\n\n      case 1: {\n        this.collabData = this.collabService.getCollabs(\"getActiveCollabs\")\n        .pipe(\n          map((data : CollabModel[] )  =>  data.reverse())\n        );\n        \n        this.collabData.subscribe( next => {\n          localStorage[this.CACHE_KEY_2] = JSON.stringify(next);\n        });\n\n        this.collabData = this.collabData.pipe(\n          startWith(JSON.parse(localStorage[this.CACHE_KEY_0] || '{}'))\n        );\n          \n        break;\n      }\n\n      case 2: {\n        this.collabData = this.collabService.getCollabs(\"getCollabDetails\")\n        .pipe(\n          map((data : CollabModel[] )  =>  data.reverse())\n        );\n\n        this.collabData.subscribe( next => {\n          localStorage[this.CACHE_KEY_1] = JSON.stringify(next);\n        });\n\n        this.collabData = this.collabData.pipe(\n          startWith(JSON.parse(localStorage[this.CACHE_KEY_1] || '{}'))\n        );\n        \n        break;\n      }\n\n      default: {\n\n        break;\n      }\n\n\n    }\n  }\n\n  \n\n}\n\n","module.exports = \"table { \\n    width: 100%; \\n    border-collapse: collapse; \\n  }\\n  /* Zebra striping */\\n  tr:nth-of-type(odd) { \\n    background: #eee; \\n  }\\n  th { \\n    background: #333; \\n    color: white; \\n    font-weight: bold; \\n  }\\n  td, th { \\n    padding: 6px; \\n    border: 1px solid #ccc; \\n    text-align: left; \\n  }\\n  td a{\\n    display: block;\\n  \\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9jb2xsYWItdGFibGUvY29sbGFiLXRhYmxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gseUJBQXlCO0VBQzNCO0VBQ0EsbUJBQW1CO0VBQ25CO0lBQ0UsZ0JBQWdCO0VBQ2xCO0VBQ0E7SUFDRSxnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLGlCQUFpQjtFQUNuQjtFQUNBO0lBQ0UsWUFBWTtJQUNaLHNCQUFzQjtJQUN0QixnQkFBZ0I7RUFDbEI7RUFFQTtJQUNFLGNBQWM7O0VBRWhCIiwiZmlsZSI6InNyYy9hcHAvaG9tZS9jb2xsYWItdGFibGUvY29sbGFiLXRhYmxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7IFxuICAgIHdpZHRoOiAxMDAlOyBcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyBcbiAgfVxuICAvKiBaZWJyYSBzdHJpcGluZyAqL1xuICB0cjpudGgtb2YtdHlwZShvZGQpIHsgXG4gICAgYmFja2dyb3VuZDogI2VlZTsgXG4gIH1cbiAgdGggeyBcbiAgICBiYWNrZ3JvdW5kOiAjMzMzOyBcbiAgICBjb2xvcjogd2hpdGU7IFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkOyBcbiAgfVxuICB0ZCwgdGggeyBcbiAgICBwYWRkaW5nOiA2cHg7IFxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7IFxuICAgIHRleHQtYWxpZ246IGxlZnQ7IFxuICB9XG5cbiAgdGQgYXtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgXG4gIH0iXX0= */\"","module.exports = \"\\n<table>\\n    <tr *ngFor = \\\"let row of table\\\">\\n      <td>\\n        <button mat-button color= \\\"primary\\\" (click) = \\\"goToProfile(row.userName)\\\">{{ getUserDispname(row.userName) }}</button>\\n      </td>\\n      <td *ngFor = \\\"let req of row.list\\\" [style.background-color] = \\\"req.knows ? '#ccffcc' : '#ffcccc'\\\"> {{ req.nameOf }} </td>\\n    </tr>\\n</table>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { TableBuilder } from 'src/app/shared/models/tableBuilder.model';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/shared/dbAccess/user.service';\n\n@Component({\n  selector: 'collab-table',\n  templateUrl: './collab-table.component.html',\n  styleUrls: ['./collab-table.component.css']\n})\nexport class CollabTableComponent implements OnInit {\n  @Input() table: Array<TableBuilder> = [];\n  @Input('xAxisReq') xAxisReq: Array<string> = [];\n \n\n  constructor(\n    private router: Router,\n    private userservice : UserService\n  ) \n  { }\n\n  ngOnInit() {\n    //console.log(this.xAxisReq);\n  }\n\n  goToProfile(user: string) {\n      this.router.navigate(['/user/', user]);\n  }\n\n  \n  displayNames: Map<String, String> = new Map();\n\n  getUserDispname(username: string){\n    if (this.displayNames.has(username)) {\n      return this.displayNames.get(username);\n    } else {\n      this.displayNames.set(username, \"\");\n      \n      setTimeout(()=>{\n        this.userservice.getMemberdetails(username).subscribe((data :any)=>\n        {\n          //console.log(data);\n          this.displayNames.set(username, data['name']);\n        })\n      });\n      return this.displayNames.get(username);\n    }\n  }\n\n}\n\n\n","module.exports = \".mat-form-field{\\n    width: 70%;\\n    margin-top: 10px;\\n}\\n\\n.container {\\n    margin-top: 50px;\\n    margin-bottom: 50px;\\n    margin-left: 10%;\\n    margin-right: 10%;\\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n\\n}\\n\\n.example-chip-list {\\n    width: 100%;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9jcmVhdGUtY29sbGFiL2NyZWF0ZS1jb2xsYWIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7SUFDVixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLGdCQUFnQjtJQUNoQixpQkFBaUI7SUFDakIseUVBQXlFOztBQUU3RTs7QUFFQTtJQUNJLFdBQVc7RUFDYiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvY3JlYXRlLWNvbGxhYi9jcmVhdGUtY29sbGFiLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWZvcm0tZmllbGR7XG4gICAgd2lkdGg6IDcwJTtcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG4uY29udGFpbmVyIHtcbiAgICBtYXJnaW4tdG9wOiA1MHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XG4gICAgbWFyZ2luLWxlZnQ6IDEwJTtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwJTtcbiAgICBib3gtc2hhZG93OiAwIDRweCA4cHggMCByZ2JhKDAsMCwwLDAuMiksIDAgNnB4IDIwcHggMCByZ2JhKDAsIDAsIDAsIDAuMTkpO1xuXG59XG5cbi5leGFtcGxlLWNoaXAtbGlzdCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH0iXX0= */\"","module.exports = \"<!-- Steppers -->\\n<div class = \\\"container\\\">\\n        <mat-vertical-stepper [linear] = \\\"true\\\" #stepper>\\n    \\n                <mat-step [stepControl] = \\\"firstFormGroup\\\">\\n                    <form [formGroup] = \\\"firstFormGroup\\\">\\n                        <ng-template matStepLabel >Fill in Collab Info</ng-template>\\n                        <mat-form-field>\\n                            <input matInput placeholder = \\\"Collab Title...\\\" formControlName = \\\"title\\\" required>\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                            <textarea matInput placeholder = \\\"Description...\\\" formControlName = \\\"description\\\" required></textarea>\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                                <input matInput placeholder = \\\"Location...\\\" formControlName = \\\"location\\\" required>\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                                <input type = \\\"number\\\" min=\\\"2\\\"  matInput placeholder = \\\"Collab Size...\\\" formControlName = \\\"size\\\" required>\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                                <input formControlName = \\\"date\\\" matInput [owlDateTimeTrigger]=\\\"dt\\\" placeholder = \\\"Choose a date\\\" [owlDateTime]=\\\"dt\\\" required>\\n                                <owl-date-time #dt></owl-date-time>\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                                <input type = \\\"number\\\" min=\\\"2\\\"  matInput placeholder = \\\"Duration...\\\" formControlName = \\\"duration\\\" required>\\n                        </mat-form-field>\\n                    </form>\\n                </mat-step>\\n                <mat-step [stepControl] = \\\"secondFormGroup\\\" >\\n                    <ng-template matStepLabel>Add Classes and Skills</ng-template>\\n                    <div>\\n                        <mat-form-field class=\\\"example-chip-list\\\">\\n                            <mat-chip-list #chipListSkills>\\n                                <mat-chip\\n                                    *ngFor=\\\"let skill of skills\\\"\\n                                    [selectable]=\\\"selectable\\\"\\n                                    [removable]=\\\"removable\\\"\\n                                    (removed)=\\\"removeSkill(skill)\\\">\\n                                    {{ skill }}\\n                                    <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\n                                </mat-chip>\\n                                <input\\n                                    placeholder=\\\"New Skill...\\\"\\n                                    #skillInput\\n                                    [formControl]=\\\"skillCtrl\\\"\\n                                    [matAutocomplete]=\\\"auto\\\"\\n                                    [matChipInputFor]=\\\"chipListSkills\\\"\\n                                    [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\n                                    [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\n                                    (matChipInputTokenEnd)=\\\"addSkill($event)\\\">\\n                                    <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selectedSkill($event)\\\">\\n                                        <mat-option *ngFor=\\\"let skill of filteredSkills\\\" [value]=\\\"skill\\\">\\n                                            {{ skill }}\\n                                        </mat-option>\\n                                    </mat-autocomplete>\\n                            </mat-chip-list>\\n                                    \\n                        </mat-form-field>\\n                        <mat-form-field class=\\\"example-chip-list\\\">\\n                            <mat-chip-list #chipListClasses>\\n                                <mat-chip\\n                                    *ngFor = \\\"let class of classes\\\"\\n                                    [selectable] = \\\"selectable\\\"\\n                                    [removable] = \\\"removable\\\"\\n                                    (removed) = \\\"removeClass(class)\\\">\\n                                    {{ class }}\\n                                    <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\n                                </mat-chip>\\n                                <input \\n                                    placeholder=\\\"New Class...\\\"\\n                                    #classInput\\n                                    [formControl]=\\\"classCtrl\\\"\\n                                    [matAutocomplete]=\\\"auto2\\\"\\n                                    [matChipInputFor]=\\\"chipListClasses\\\"\\n                                    [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\n                                    [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\n                                    (matChipInputTokenEnd)=\\\"addClass($event)\\\">\\n                                    <mat-autocomplete #auto2=\\\"matAutocomplete\\\" (optionSelected)=\\\"selectedClass($event)\\\">\\n                                        <mat-option *ngFor=\\\"let class of filteredClasses\\\" [value]=\\\"class\\\">\\n                                            {{ class }}\\n                                        </mat-option>\\n                                    </mat-autocomplete>\\n                            </mat-chip-list>\\n\\n                        </mat-form-field>\\n                    </div>\\n                </mat-step>\\n                <mat-step>\\n                    <ng-template matStepLabel> Confirm Your Information</ng-template>\\n                    <div>\\n                        <button mat-raised-button (click) = \\\"createCollab()\\\" color=\\\"primary\\\">Done</button>\\n                    </div>\\n                </mat-step>\\n            \\n        </mat-vertical-stepper>\\n    </div>\"","import { CollabModel } from 'src/app/shared/models/collab.model';\nimport { UserService } from 'src/app/shared/dbAccess/user.service';\nimport { CollabsService } from 'src/app/shared/dbAccess/collabs.service';\nimport { ENTER, COMMA } from '@angular/cdk/keycodes';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { MatAutocomplete, MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { map, startWith, debounceTime, distinctUntilChanged, switchMap, } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { query } from '@angular/animations';\n\n@Component({\n  selector: 'create-collab',\n  templateUrl: './create-collab.component.html',\n  styleUrls: ['./create-collab.component.css']\n})\nexport class CreateCollabComponent implements OnInit {\n  @Input() currentCollab: CollabModel;\n\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n\n  \n  visible = true;\n  selectable = true;\n  removable = true;\n  addOnBlur = true;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n\n  //Variables for Skills.\n  skillCtrl = new FormControl();\n  filteredSkills: Observable<string[]>;\n  skills: string[] = [];\n  allSkills: string[] = [];\n\n  //Variables for Classes.\n  classCtrl = new FormControl();\n  filteredClasses: Observable<string[]>;\n  classes: string[] = [];\n  allClasses: string[] = [];\n\n\n  collabData: CollabModel;\n\n  @ViewChild('skillInput') skillInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto') matAutocomplete1: MatAutocomplete;\n\n  @ViewChild('classInput') classInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto2') matAutocomplete2: MatAutocomplete;\n\n  constructor(private _formBuilder: FormBuilder, \n              private userService : UserService, \n              private collabService: CollabsService,\n              private router: Router) {\n    this.collabData = new CollabModel;\n   }\n\n  ngOnInit() {\n    \n    this.skillCtrl.valueChanges.pipe(\n      \n      startWith(null),\n      debounceTime(200),\n      distinctUntilChanged(),\n      switchMap( (query: string) => this.userService.searchSkills(query)  )\n      ).subscribe( (skills: Observable<string[]>) => this.filteredSkills = skills[\"matches\"] );\n\n      this.classCtrl.valueChanges.pipe(\n      startWith(null),\n      debounceTime(200),\n      distinctUntilChanged(),\n      switchMap( (query: string) => this.userService.searchClasses(query)  )\n      ).subscribe( (classes: Observable<string[]>) => this.filteredClasses = classes[\"matches\"] );\n\n\n      \n    this.firstFormGroup = this._formBuilder.group({\n      title: [this.collabData.title, Validators.required],\n      description: [this.collabData.description, Validators.required],\n      location: [this.collabData.location, Validators.required],\n      size: [this.collabData.size, Validators.required],\n      date: [this.collabData.date, Validators.required],\n      duration: [this.collabData.duration, Validators.required],\n    });\n    \n  }\n\n  addSkill(event: MatChipInputEvent): void {\n\n    if(!this.matAutocomplete1.isOpen){\n\n      const input = event.input;\n      const value = event.value;\n\n      if((value || '').trim()) {\n        this.skills.push(value.trim());\n      }\n  \n      if(input) {\n        input.value = '';\n      } \n\n      this.skillCtrl.setValue(null);\n      \n    }\n  }\n\n  removeSkill(skill: string): void {\n    const index = this.skills.indexOf(skill);\n\n    if (index >= 0) {\n      this.skills.splice(index, 1);\n    }\n  }\n\n  selectedSkill(event: MatAutocompleteSelectedEvent): void {\n    this.skills.push(event.option.viewValue);\n    this.skillInput.nativeElement.value = '';\n    this.skillCtrl.setValue(null);\n\n  }\n\n  addClass(event: MatChipInputEvent): void {\n\n    if(!this.matAutocomplete2.isOpen){\n\n      const input = event.input;\n      const value = event.value;\n\n      if((value || '').trim()) {\n        this.classes.push(value.trim());\n      }\n  \n      if(input) {\n        input.value = '';\n      } \n\n      this.classCtrl.setValue(null);\n    }\n  }\n\n  removeClass(_class: string): void {\n    const index = this.classes.indexOf(_class);\n\n    if (index >= 0) {\n      this.classes.splice(index, 1);\n    }\n  }\n\n  selectedClass(event: MatAutocompleteSelectedEvent): void {\n    this.classes.push(event.option.viewValue);\n    this.classInput.nativeElement.value = '';\n    this.classCtrl.setValue(null);\n  }\n\n  createCollab(){    \n    this.collabData = Object.assign({}, this.firstFormGroup.value);\n    this.collabData.skills = this.skills;\n    this.collabData.classes = this.classes;\n    this.collabData.date = (this.collabData.date).valueOf();\n    this.collabData.duration *= 86400000;\n    this.collabData.duration += this.collabData.date;\n    let createResult: boolean;\n    this.collabService.createCollab(this.collabData)\n      .subscribe(result => { \n        if(result['success']){\n          this.router.navigate(['/home'])\n        } else {\n          error => {console.error('success' + error)}\n        }\n\n       } );\n    \n    \n  }\n  \n  \n\n}\n","module.exports = \".mat-form-field {\\n    width: 90%;\\n    margin-left: 15px;\\n}\\n\\n.example-chip-list .mat-autocomplete{\\n    width: 90%;\\n}\\n\\n.container {\\n    margin-top: 50px;\\n    margin-bottom: 50px;\\n    margin-left: 10%;\\n    margin-right: 10%;\\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n}\\n\\nexample-chip-list {\\n    width: 100%;\\n  }\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9lZGl0LWNvbGxhYi9lZGl0LWNvbGxhYi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtJQUNWLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLFVBQVU7QUFDZDs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQix5RUFBeUU7QUFDN0U7O0FBRUE7SUFDSSxXQUFXO0VBQ2IiLCJmaWxlIjoic3JjL2FwcC9ob21lL2VkaXQtY29sbGFiL2VkaXQtY29sbGFiLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWZvcm0tZmllbGQge1xuICAgIHdpZHRoOiA5MCU7XG4gICAgbWFyZ2luLWxlZnQ6IDE1cHg7XG59XG5cbi5leGFtcGxlLWNoaXAtbGlzdCAubWF0LWF1dG9jb21wbGV0ZXtcbiAgICB3aWR0aDogOTAlO1xufVxuXG4uY29udGFpbmVyIHtcbiAgICBtYXJnaW4tdG9wOiA1MHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XG4gICAgbWFyZ2luLWxlZnQ6IDEwJTtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwJTtcbiAgICBib3gtc2hhZG93OiAwIDRweCA4cHggMCByZ2JhKDAsMCwwLDAuMiksIDAgNnB4IDIwcHggMCByZ2JhKDAsIDAsIDAsIDAuMTkpO1xufVxuXG5leGFtcGxlLWNoaXAtbGlzdCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuIl19 */\"","module.exports = \"<div class = \\\"container\\\">\\n        <form #form = \\\"ngForm\\\" (ngSubmit) = \\\"update(form.value)\\\">\\n                <br>\\n                <mat-form-field>\\n                <input [(ngModel)] = \\\"collabData['title']\\\" name = \\\"title\\\" id = \\\"title\\\" type = \\\"text\\\" class = \\\"form-control\\\"\\n                        #title = \\\"ngModel\\\" matInput placeholder = \\\"Collab Title...\\\" required>\\n                </mat-form-field>\\n                <br>\\n                <mat-form-field>\\n                <textarea [(ngModel)] = \\\"collabData['description']\\\" name = \\\"description\\\" id = \\\"description\\\" type = \\\"text\\\" class = \\\"form-control\\\"\\n                        #description = \\\"ngModel\\\" matInput placeholder = \\\"Collab Description...\\\" required></textarea>\\n                </mat-form-field>\\n                <br>\\n                <mat-form-field>\\n                <input [(ngModel)] = \\\"collabData['location']\\\" name = \\\"location\\\" id = \\\"location\\\" type = \\\"text\\\" class = \\\"form-control\\\"\\n                        #location = \\\"ngModel\\\" matInput placeholder = \\\"Location...\\\" required>\\n                </mat-form-field>\\n                <br>\\n                <mat-form-field>\\n                        <input [(ngModel)] = \\\"collabData['size']\\\" name = \\\"size\\\" id = \\\"size\\\" type = \\\"text\\\" class = \\\"form-control\\\"\\n                                #size = \\\"ngModel\\\" matInput placeholder = \\\"Collab Size...\\\" required>\\n                </mat-form-field>\\n                <mat-form-field>\\n                        <input [ngModel] (ngModelChange)=\\\"collabData['date'] = $event\\\"\\n                                name = \\\"date\\\" id=\\\"date\\\" class = \\\"form-control\\\" \\n                                #date = \\\"ngModel\\\" matInput placeholder = \\\"Choose a date\\\" [owlDateTimeTrigger]=\\\"dt\\\" [owlDateTime]=\\\"dt\\\" required>\\n                        <owl-date-time #dt></owl-date-time>\\n                </mat-form-field>\\n                <mat-form-field>\\n                        <input [ngModel] name = \\\"duration\\\" id = \\\"duration\\\"  class = \\\"form-control\\\"\\n                                #duration = \\\"ngModel\\\" matInput placeholder = \\\"Duration...\\\" [owlDateTimeTrigger]=\\\"dt2\\\" [owlDateTime]=\\\"dt2\\\" required>\\n                        <owl-date-time #dt2></owl-date-time>\\n                </mat-form-field>\\n                <mat-form-field class=\\\"example-chip-list\\\">\\n                        <mat-chip-list #chipListSkills>\\n                                <mat-chip\\n                                *ngFor=\\\"let skill of skills\\\"\\n                                [selectable]=\\\"selectable\\\"\\n                                [removable]=\\\"removable\\\"\\n                                (removed)=\\\"removeSkill(skill)\\\">\\n                                {{ skill }}\\n                                <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\n                                </mat-chip>\\n                                <input\\n                                placeholder=\\\"New Skill...\\\"\\n                                #skillInput\\n                                [formControl]=\\\"skillCtrl\\\"\\n                                [matAutocomplete]=\\\"auto\\\"\\n                                [matChipInputFor]=\\\"chipListSkills\\\"\\n                                [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\n                                [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\n                                (matChipInputTokenEnd)=\\\"addSkill($event)\\\">\\n                                <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selectedSkill($event)\\\">\\n                                        <mat-option *ngFor=\\\"let skill of filteredSkills\\\" [value]=\\\"skill\\\">\\n                                        {{ skill }}\\n                                        </mat-option>\\n                                </mat-autocomplete>\\n                        </mat-chip-list>             \\n                </mat-form-field>\\n                <br>\\n                <mat-form-field class=\\\"example-chip-list\\\">\\n                        <mat-chip-list #chipListClasses>\\n                                <mat-chip\\n                                *ngFor = \\\"let class of classes\\\"\\n                                [selectable] = \\\"selectable\\\"\\n                                [removable] = \\\"removable\\\"\\n                                (removed) = \\\"removeClass(class)\\\">\\n                                {{ class }}\\n                                <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\n                                </mat-chip>\\n                                <input \\n                                placeholder=\\\"New Class...\\\"\\n                                #classInput\\n                                [formControl]=\\\"classCtrl\\\"\\n                                [matAutocomplete]=\\\"auto2\\\"\\n                                [matChipInputFor]=\\\"chipListClasses\\\"\\n                                [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\n                                [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\n                                (matChipInputTokenEnd)=\\\"addClass($event)\\\">\\n                        <mat-autocomplete #auto2=\\\"matAutocomplete\\\" (optionSelected)=\\\"selectedClass($event)\\\">\\n                                <mat-option *ngFor=\\\"let class of filteredClasses\\\" [value]=\\\"class\\\">\\n                                {{ class }}\\n                                </mat-option>\\n                        </mat-autocomplete>\\n                </mat-chip-list>\\n\\n                </mat-form-field>\\n                <br>\\n                <button mat-raised-button>Update</button>\\n                <br>\\n        </form>\\n       \\n        \\n</div>\"","import { CollabModel } from 'src/app/shared/models/collab.model';\nimport { UserService } from 'src/app/shared/dbAccess/user.service';\nimport { CollabsService } from 'src/app/shared/dbAccess/collabs.service';\nimport { ENTER, COMMA } from '@angular/cdk/keycodes';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { MatAutocomplete, MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { map, startWith, debounceTime, distinctUntilChanged, switchMap, } from 'rxjs/operators';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-edit-collab',\n  templateUrl: './edit-collab.component.html',\n  styleUrls: ['./edit-collab.component.css']\n})\nexport class EditCollabComponent implements OnInit {\n  @Input() currentCollab: CollabModel;\n\n  formGroup: FormGroup;\n  _id: string;\n  myCollab: CollabModel;\n\n  \n  visible = true;\n  selectable = true;\n  removable = true;\n  addOnBlur = true;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n\n  //Variables for Skills.\n  skillCtrl = new FormControl();\n  filteredSkills: Observable<string[]>;\n  skills: string[] = [];\n  allSkills: string[] = [];\n\n  //Variables for Classes.\n  classCtrl = new FormControl();\n  filteredClasses: Observable<string[]>;\n  classes: string[] = [];\n  allClasses: string[] = [];\n\n\n  collabData: CollabModel;\n\n  @ViewChild('skillInput') skillInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto') matAutocomplete1: MatAutocomplete;\n\n  @ViewChild('classInput') classInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto2') matAutocomplete2: MatAutocomplete;\n\n  constructor(\n              private userService : UserService, \n              private collabService: CollabsService,\n              private activeRoute: ActivatedRoute,\n              private router : Router) {\n            \n    this.collabData = new CollabModel;\n    this.activeRoute.paramMap\n    .subscribe(params => {\n      this._id = params.get('_id');\n    })\n   }\n\n  async ngOnInit() {\n    await this.getCollabDetails(this._id);\n    \n    this.skillCtrl.valueChanges.pipe(\n      \n      startWith(null),\n      debounceTime(200),\n      distinctUntilChanged(),\n      switchMap( (query: string) => this.userService.searchSkills(query)  )\n      ).subscribe( (skills: Observable<string[]>) => this.filteredSkills = skills[\"matches\"] );\n\n    this.classCtrl.valueChanges.pipe(\n      startWith(null),\n      debounceTime(200),\n      distinctUntilChanged(),\n      switchMap( (query: string) => this.userService.searchClasses(query)  )\n      ).subscribe( (classes: Observable<string[]>) => this.filteredClasses = classes[\"matches\"] );\n    \n  }\n\n  \n\n  getCollabDetails(id: string){\n    this.collabService.getSingleCollab(id).subscribe(res => {\n      this.collabData = res['0'];\n      this.skills = res['0']['skills'];\n      this.classes = res['0']['classes'];\n    });\n  }\n\n  async update(collabUpdatedData){\n    \n    this.collabData = collabUpdatedData;\n    this.collabData.skills = this.skills;\n    this.collabData.classes = this.classes;\n    this.collabData._id = this._id;\n    \n\n    console.log(collabUpdatedData);\n  \n    await this.collabService.editCollab(this.collabData, this._id)\n      .subscribe(res => { \n          if(res['success']){ \n            this.router.navigate(['/home'])\n           } else {\n            console.error(res);\n          }\n          });\n    \n  }\n\n  addSkill(event: MatChipInputEvent): void {\n\n    if(!this.matAutocomplete1.isOpen){\n\n      const input = event.input;\n      const value = event.value;\n\n      if((value || '').trim()) {\n        this.skills.push(value.trim());\n      }\n  \n      if(input) {\n        input.value = '';\n      } \n\n      this.skillCtrl.setValue(null);\n      \n    }\n  }\n\n  removeSkill(skill: string): void {\n    const index = this.skills.indexOf(skill);\n\n    if (index >= 0) {\n      this.skills.splice(index, 1);\n    }\n  }\n\n  selectedSkill(event: MatAutocompleteSelectedEvent): void {\n    this.skills.push(event.option.viewValue);\n    this.skillInput.nativeElement.value = '';\n    this.skillCtrl.setValue(null);\n\n  }\n\n  addClass(event: MatChipInputEvent): void {\n\n    if(!this.matAutocomplete2.isOpen){\n\n      const input = event.input;\n      const value = event.value;\n\n      if((value || '').trim()) {\n        this.classes.push(value.trim());\n      }\n  \n      if(input) {\n        input.value = '';\n      } \n\n      this.classCtrl.setValue(null);\n    }\n  }\n\n  removeClass(_class: string): void {\n    const index = this.classes.indexOf(_class);\n\n    if (index >= 0) {\n      this.classes.splice(index, 1);\n    }\n  }\n\n  selectedClass(event: MatAutocompleteSelectedEvent): void {\n    this.classes.push(event.option.viewValue);\n    this.classInput.nativeElement.value = '';\n    this.classCtrl.setValue(null);\n  }\n\n  \n  \n  \n\n}\n","import { CreateCollabComponent } from './create-collab/create-collab.component';\nimport { CollabCardComponent } from './collab-card/collab-card.component';\nimport { HomeComponent } from './collab-list/home.component';\nimport { EditCollabComponent } from './edit-collab/edit-collab.component';\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n/**\n*\t@brief Configure the routes for the feature module. Once loaded, we have \n*        access to the components declared in the feature module\n*\n*\t@param[routes] ,  array that will contain our routes\n*\t@param[path]       ,  string that will redirect to the module specified on 'loadChildren'\n*\t@param[component]       , component to be loaded depending on the 'path' that was taken\n*\t@return nothing\n*/\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n  path:\"collabinfo\",\n    component: CollabCardComponent\n  },\n  {\n    path:\"createcollab\",\n    component: CreateCollabComponent\n  },\n  {\n    path:\"editcollab/:_id\",\n    component: EditCollabComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","import { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatListModule } from '@angular/material/list';\n\n\nimport { HomeComponent } from './collab-list/home.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomeRoutingModule } from './home-routing.module';\n\n//Material Components\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatSelectModule} from '@angular/material/select';\n\n\nimport { CollabCardComponent } from './collab-card/collab-card.component';\nimport { CollabTableComponent } from './collab-table/collab-table.component';\nimport { CreateCollabComponent } from './create-collab/create-collab.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { EditCollabComponent } from './edit-collab/edit-collab.component';\n\n@NgModule({\n  declarations: [HomeComponent, CollabCardComponent, CollabTableComponent, CreateCollabComponent, EditCollabComponent],\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    //Angular Material\n    MatTabsModule,\n    MatCardModule,\n    MatIconModule,\n    MatButtonModule,\n    MatListModule,\n    MatExpansionModule,\n    MatTableModule,\n    ScrollDispatchModule,\n    MatChipsModule,\n    MatGridListModule,\n    MatStepperModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatSelectModule,\n\n    //Clock\n    OwlDateTimeModule, \n    OwlNativeDateTimeModule,\n    \n\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class HomeModule { }\n","export class CollabModel {\n    public _id          ?: {};\n    public owner        ?: string;\n    public size         ?: number;\n    public date         ?: number;\n    public duration     ?: number;\n    public location     ?: string;\n    public status       ?: boolean;\n    public title        ?: string;\n    public description  ?: string;\n    public classes      ?: string[];\n    public skills       ?: string[];\n    public applicants   ?: string[];\n    public members      ?: string[];\n    \n}","export class TableBuilder {\n    userName: string;\n    list: Knows[]; \n\n    constructor(name: string){\n        this.userName = name;\n        this.list = [];\n    }\n\n    setKnown(nameOf: string, knowsOf: boolean){\n        this.list.push(\n            {\n                nameOf: nameOf,\n                knows: knowsOf\n            }\n        )\n    }\n\n    \n\n\n\n}\n\ninterface Knows {\n    nameOf: string;\n    knows: boolean;\n}"],"sourceRoot":""}